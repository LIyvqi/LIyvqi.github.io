<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2022年老婆生日快乐</title>
      <link href="/2022/06/13/2022%E5%B9%B4%E8%80%81%E5%A9%86%E7%94%9F%E6%97%A5%E5%BF%AB%E4%B9%90/"/>
      <url>/2022/06/13/2022%E5%B9%B4%E8%80%81%E5%A9%86%E7%94%9F%E6%97%A5%E5%BF%AB%E4%B9%90/</url>
      
        <content type="html"><![CDATA[<h2 id="祝我亲爱的老婆生日快乐"><a href="#祝我亲爱的老婆生日快乐" class="headerlink" title="祝我亲爱的老婆生日快乐"></a>祝我亲爱的老婆生日快乐</h2><p>你是我遥望的一颗星星</p><p>繁星暗淡 只望见你</p><p>不知所以 更想你</p><p>想留住你 想拥抱你</p><p>擦亮银河 照亮你</p><pre><code>等我去找你哦，一起过一个快快乐乐的生日！</code></pre><p>  <img src="https://raw.githubusercontent.com/LIyvqi/FigOfWeb/main/202206132215420.png" alt="我最美"> </p> <img src="https://raw.githubusercontent.com/LIyvqi/FigOfWeb/main/202206132215199.png" alt="我最可爱" style="zoom: 80%;" /><p> <img src="https://raw.githubusercontent.com/LIyvqi/FigOfWeb/main/202206132216651.png" alt="一直幸福哦"> </p>]]></content>
      
      
      <categories>
          
          <category> Love </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 老婆生日 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习花书-预备知识</title>
      <link href="/2022/06/13/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%8A%B1%E4%B9%A6Day1-%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86/"/>
      <url>/2022/06/13/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%8A%B1%E4%B9%A6Day1-%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h2 id="0、写在最前面"><a href="#0、写在最前面" class="headerlink" title="0、写在最前面"></a>0、写在最前面</h2><p>​计划重新学习一下深度学习这本书的内容，我选择的是李沐老师翻译的部分，开源在网站中，可以见文末，计划一个月内学完，并且把不熟悉的部分整理一下，因为之前也是有些基础的，此教程是我在闲暇时间查漏补缺的内容，个人主观性较强，但是学习路线很明确，欢迎大家一起学习~</p><h2 id="1、pandas"><a href="#1、pandas" class="headerlink" title="1、pandas"></a>1、pandas</h2><pre><code class="Python"># pandas按照位置读取和缺失值的处理# data.iloc[]  中括号， fillna 缺失值的填充inputs, outputs = data.iloc[:, 0:2], data.iloc[:, 2]inputs = inputs.fillna(inputs.mean())inputs = pd.get_dummies(inputs, dummy_na=True)    # get_dummies是自动将文字型转化为数值型x.shape    # 没有括号，张量的形状A = torch.arange(20, dtype=torch.float32).reshape(5, 4)B = A.clone()  # 通过分配新内存，将A的一个副本分配给B2+A   #将张量乘以或加上一个标量不会改变张量的形状，其中张量的每个元素都将与标量相加或相乘# 在tensor中，是面向对象来进行最大最小值的求解的A.sum()sum_A = A.sum(axis=1, keepdims=True) #在调用函数来[计算总和或均值时保持轴数不变]会很有用# axis=0的时候一般是沿着向下的方法，axis=1的时候沿着横轴的方法# 矩阵的向量积A.shape, x.shape, torch.mv(A, x) # (torch.Size([5, 4]), torch.Size([4]), tensor([ 12.,  44.,  76., 108., 140.]))# 矩阵的乘法torch.mm(A, B)# torch求二范数和一范数torch.norm(u),torch.abs(u).sum()</code></pre><h2 id="微积分"><a href="#微积分" class="headerlink" title="微积分"></a>微积分</h2><pre><code class="Python"># 自动求导求梯度的例子import torchx = torch.arange(4.0)x.requires_grad_(True)# 等价于x=torch.arange(4.0,requires_grad=True)x.grad  # 默认值是Noney = 2 * torch.dot(x, x)y.backward()x.grad    # tensor([ 0.,  4.,  8., 12.])   x.grad == 4 * x   # tensor([True, True, True, True])# 在默认情况下，PyTorch会累积梯度，我们需要清除之前的值x.grad.zero_()y = x.sum()y.backward()x.gradx.grad_zero() #tensor([0., 1., 2., 3.], requires_grad=True)  清理了梯度，回到之前</code></pre><h2 id="概率及采样"><a href="#概率及采样" class="headerlink" title="概率及采样"></a>概率及采样</h2><pre><code class="Python">from torch.distributions import multinomialfair_probs = torch.ones([6]) / 6# 将结果存储为32位浮点数以进行除法counts = multinomial.Multinomial(1000, fair_probs).sample() #它在索引𝑖i处的值是采样结果中𝑖i出现的次数counts / 1000  # 相对频率作为估计值# 上述就是按照fair_probs的概率模拟抽样import torchprint(dir(torch.distributions))# 查看torch中distributions里面内置的函数help(torch.ones)    # 查看具体的用法</code></pre><h2 id="笔记出处—完整教程"><a href="#笔记出处—完整教程" class="headerlink" title="笔记出处—完整教程"></a>笔记出处—完整教程</h2><p><a href="https://zh.d2l.ai/chapter_preliminaries/index.html">https://zh.d2l.ai/chapter_preliminaries/index.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 预备知识 </tag>
            
            <tag> 微积分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo写博客中会遇到的问题（持续更新）</title>
      <link href="/2022/06/12/Hexo%E5%86%99%E5%8D%9A%E5%AE%A2%E4%B8%AD%E4%BC%9A%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
      <url>/2022/06/12/Hexo%E5%86%99%E5%8D%9A%E5%AE%A2%E4%B8%AD%E4%BC%9A%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1、白嫖飞书的图床"><a href="#1、白嫖飞书的图床" class="headerlink" title="1、白嫖飞书的图床"></a>1、白嫖飞书的图床</h2><p>​因为学校一直用飞书，之前经常在飞书云文档记笔记，我发现在飞书云文档上传照片的时候，直接复制到.md文件中复制过来的居然是图床的链接，那这样只要飞书的文件不删除，就可以一直白嫖了，哈哈哈哈。</p><p>​过了一天之后发现飞书得到图床居然是动态更新的，第二天就用不了了，无语啊。后来我又改成了Github的仓库做图床。</p><p>​下载PicGo软件，找到图床设置，选择Github的图床就行。</p><img src="https://raw.githubusercontent.com/LIyvqi/FigOfWeb/main/image-20220612233642481.png" alt="image-20220612233642481" style="zoom:50%;" /><img src="https://raw.githubusercontent.com/LIyvqi/FigOfWeb/main/image-20220612233822432.png" alt="image-20220612233822432" style="zoom: 25%;" /><p>在typora的偏好设置中也选择，这样以后直接复制到typora中的照片就可以，不用管别的了。</p><p>​但是考虑到GitHub的存储空间是有限的，只有1个G，之后就没了，后来发现了 又拍云 这个网站，就在我的首页有跳转链接，直接百度搜索就行，比较容易。</p><p>​又拍云有一个活动，每年免费送一次空间和流量，只需要在网站的主页上放上他的广告即可。</p><p><a href="https://www.upyun.com/league">https://www.upyun.com/league</a>     进入此网站，按照教程申请即可。</p><img src="http://liyuqi-image.test.upcdn.net/202206131927395.png" alt="image-20220613192711265" style="zoom:25%;" /> <h2 id="2、报错问题-SSH连接的443"><a href="#2、报错问题-SSH连接的443" class="headerlink" title="2、报错问题 SSH连接的443"></a>2、报错问题 SSH连接的443</h2><p>​写好了博客上传的时候总是会出现连接超时 port 443： Timed out和OpenSSL错误的问题，教程的很多方法都不太好，直接改掉根目录配置文件_config.yml的deploy这部分。</p><pre><code>deploy:  type: git  repository: git@github.com:YOURNAME.github.io.git # 把https的协议换成git的，可以去仓库看  branch: main</code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 写作 </tag>
            
            <tag> 问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-GitHub配置个人网站</title>
      <link href="/2022/06/12/Hexo-GitHub%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
      <url>/2022/06/12/Hexo-GitHub%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<p>参考：<a href="https://www.bilibili.com/video/BV1mU4y1j72n?spm_id_from=333.999.0.0">【2021最新版】保姆级Hexo+github搭建个人博客_哔哩哔哩_bilibili</a></p><p>比着视频来一遍，非常简单，视频大约30min，实操1小时就ok，整个教程都非常顺利，没有任何bug。</p><h2 id="1、工具的安装"><a href="#1、工具的安装" class="headerlink" title="1、工具的安装"></a>1、工具的安装</h2><p>需要安装 <a href="https://www.cnblogs.com/zhouyu2017/p/6485265.html">Node.js安装及环境配置之Windows篇 - 周瑜周 - 博客园</a>，把这些工具都安装成果之后查看是否ok。</p><p>node -v</p><p>npm -v</p><p>git –version</p><p>hexo -v</p><h2 id="2、创建自己的Github仓库"><a href="#2、创建自己的Github仓库" class="headerlink" title="2、创建自己的Github仓库"></a>2、创建自己的Github仓库</h2><p>在创建仓库的时候，一定要把仓库命名为<a href="https://github.com/LIyvqi/LIyvqi.github.io">LIyvqi.github.i</a>o  LIyvqi是我的github用户名。</p><h2 id="3、生成SSH的密钥并绑定"><a href="#3、生成SSH的密钥并绑定" class="headerlink" title="3、生成SSH的密钥并绑定"></a>3、生成SSH的密钥并绑定</h2><p>一般正常用GitHub的电脑都没问题，哈哈哈，这一步可以跳过。</p><p>在一个文件夹中打开gitbash，命令行中输入 ssh:ssh-keygen -t rsa -C “邮箱地址”</p><p>.ssh生成路径：C:\Users\自己的用户名.ssh</p><p><strong>可以上来就直接测试。</strong></p><p>测定ssh是否绑定成功：ssh -T <a href="mailto:&#x67;&#x69;&#x74;&#64;&#103;&#105;&#116;&#x68;&#x75;&#x62;&#46;&#99;&#x6f;&#109;">&#x67;&#x69;&#x74;&#64;&#103;&#105;&#116;&#x68;&#x75;&#x62;&#46;&#99;&#x6f;&#109;</a></p><p>如果一直出现ssh: connect to host github.com port 22: Connection refused的话具体看这个教程<a href="https://www.cnblogs.com/Archer314/p/14641310.html">https://www.cnblogs.com/Archer314/p/14641310.html</a> </p><h2 id="4、初始化博客"><a href="#4、初始化博客" class="headerlink" title="4、初始化博客"></a>4、初始化博客</h2><p>新建一个文件夹，选择合适的位置，这就是你日后写博客的本地文件了，进入这个文件后，打开gitbash，输入命令行：</p><p>hexo init      #初始化hexo博客</p><p>如果报错SyntaxError: Unexpected token …</p><p>建议更新一下node.js版本</p><p>hexo s    #静态生成</p><h2 id="5、把本地的博客传到github上，就可以直接当作网站打开了"><a href="#5、把本地的博客传到github上，就可以直接当作网站打开了" class="headerlink" title="5、把本地的博客传到github上，就可以直接当作网站打开了"></a>5、把本地的博客传到github上，就可以直接当作网站打开了</h2><p>配置文件修改(_config.yml)，就在当前文件夹下</p><p><img src="https://raw.githubusercontent.com/LIyvqi/FigOfWeb/main/image-20220612233348720.png" alt="image-20220612233348720"></p><p>（：后面有个空格）</p><p>deploy:</p><p> type: git</p><p> repository: <a href="https://github.com/%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97/%E4%BB%93%E5%BA%93%E7%9A%84%E5%90%8D%E5%AD%97.git">https://github.com/你的名字/仓库的名字.git</a></p><p> branch: 分支</p><p>之后在gitbash命令行中输入：npm install hexo-deployer-git –save</p><p>这样就安装好了hexo-deployer-git自动部署发布工具。</p><p>上述就是使用hexo搭建一个个人博客的教程，自定义域名还要花钱买，我们白嫖了哦，就用这个吧，可以在网络上访问，直接输入 <a href="https://liyvqi.github.io/">https://liyvqi.github.io/</a> </p><h2 id="6、更换主题"><a href="#6、更换主题" class="headerlink" title="6、更换主题"></a>6、更换主题</h2><p>在上面新建的那个web文件夹下，git bash复制命令行下载新的主题以及更新即可。</p><p><img src="https://raw.githubusercontent.com/LIyvqi/FigOfWeb/main/image-20220612233434657.png" alt="image-20220612233434657"></p><p>之后把_config.yml中的theme换成3-hexo</p><p>再之后选择更新：</p><pre><code class="Plain">cd themes/3-hexogit pull</code></pre><p>返回到MyWeb目录之后，输入   hexo server查看本地的主题是否已经换了。</p><p>如果配置了Github之后，可以输入以下命令提交修改后的主题博客。</p><pre><code class="Plain">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></pre><p>我做的时候出线了本地主题换了，但是GitHub上没有，有延迟的问题，等一会儿就好了。</p><h2 id="7、网站内容修改"><a href="#7、网站内容修改" class="headerlink" title="7、网站内容修改"></a>7、网站内容修改</h2><p>更换了主题之后，这个网站的格式内容什么的，都是在下面这个文件夹下</p><p>D:\MyBlog\MyWeb\themes\3-hexo</p><p>一些细节什么的，可以先改_config.yml   里面的注释比较齐全，可以改成自己的了。</p><h2 id="8、发文章和删除文章"><a href="#8、发文章和删除文章" class="headerlink" title="8、发文章和删除文章"></a>8、发文章和删除文章</h2><pre><code class="Plain">hexo new &quot;文章名&quot;找到那个.md文件开始写文章，写完了之后，可以hexo s本地查看，之后直接执行下面命令提交就行。hexo d# 删除的时候，在文件夹里面删了，之后执行hexo d</code></pre><h2 id="9、修改博客的报错问题"><a href="#9、修改博客的报错问题" class="headerlink" title="9、修改博客的报错问题"></a>9、修改博客的报错问题</h2><p>一般更改的时候除了改博客，还改一些别的，这时候会报错（spawn failed），是因为git或者hexo d的时候改变了一些.deploy_git文件下的内容，最简单粗暴的办法就是删了重来。</p><pre><code class="Plain">删除.deploy_git文件夹;输入git config --global core.autocrlf false然后，依次执行：hexo cleanhexo ghexo d</code></pre><h2 id="最后的进阶"><a href="#最后的进阶" class="headerlink" title="最后的进阶"></a>最后的进阶</h2><p><a href="http://yearito.cn/posts/hexo-writing-skills.html#Sublime-Text-3">http://yearito.cn/posts/hexo-writing-skills.html#Sublime-Text-3</a></p><p>写作的教程，可以参考上面</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 建站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World(作者自带的，感谢作者，就不删啦)</title>
      <link href="/2022/06/12/hello-world/"/>
      <url>/2022/06/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
